 
/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/
#include <iostream>

using namespace std;

class Student { // Class required for this question
private:
    string name;
    int ID;
public:
    Student() : name(""), ID(0) {}
    Student(string nm, int id) : name(nm), ID(id) {}
    void print() { cout << "Student Name: " << name << " | ID: " << ID << endl; }
};

class StudentList {
private:
    Student* list; // dynamic array of Student objects
    int len; // current length of the list
public:
    StudentList() : list(nullptr), len(0) {}
    ~StudentList() { delete[] list; }
    void add(const Student& s) {
        // allocate a new array with room for one more element
        Student* new_list = new Student[len + 1];

        // copy existing elements to the new array
        for (int i = 0; i < len; i++) {
            new_list[i] = list[i];
        }

        // add the new element to the end of the new array
        new_list[len] = s;

        // free memory used by the old array and update list pointer and length
        delete[] list;
        list = new_list;
        len++;
    }
    int length() const { return len; }
    Student& get(int i) const {
        if (i < 0 || i >= len) {
            cout << "Error: Index out of range" << endl;
            exit(1);
        }
        return list[i];
    }
};

int main(){
        StudentList student_list;
    student_list.add(Student("Bob",123));
    student_list.add(Student("Jane",124));
    student_list.add(Student("Peter",125));
    // print all students in the list
    for (int i=0; i<student_list.length(); i++)
        student_list.get(i).print();
}